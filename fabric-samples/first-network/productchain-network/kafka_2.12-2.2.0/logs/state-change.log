[2019-05-02 19:05:06,865] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=1, isr=0,2, zkVersion=1, replicas=0,2,3, isNew=false) correlation id 3 from controller 1 epoch 1 for partition orderer-0 (state.change.logger)
[2019-05-02 19:05:06,869] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition orderer-0 (state.change.logger)
[2019-05-02 19:05:06,930] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 1 epoch 1 for partition orderer-0 (last update controller epoch 1) since it is already the leader for the partition. (state.change.logger)
[2019-05-02 19:05:06,930] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition orderer-0 (state.change.logger)
[2019-05-02 19:05:06,937] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=1, leader=0, leaderEpoch=1, isr=[0, 2], zkVersion=1, replicas=[0, 2, 3], offlineReplicas=[3]) for partition orderer-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2019-05-02 19:05:06,941] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0,2,3, isNew=false) correlation id 5 from controller 1 epoch 1 for partition orderer-0 (state.change.logger)
[2019-05-02 19:05:06,941] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-leader transition for partition orderer-0 (state.change.logger)
[2019-05-02 19:05:06,952] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 5 from controller 1 epoch 1 for partition orderer-0 (last update controller epoch 1) since it is already the leader for the partition. (state.change.logger)
[2019-05-02 19:05:06,952] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-leader transition for partition orderer-0 (state.change.logger)
[2019-05-02 19:05:06,963] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=1, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0, 2, 3], offlineReplicas=[2, 3]) for partition orderer-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2019-05-02 19:05:08,218] TRACE [Controller id=0 epoch=2] Received response {error_code=0} for request UPDATE_METADATA with correlation id 0 sent to broker shodan:9092 (id: 0 rack: null) (state.change.logger)
[2019-05-02 19:05:08,244] TRACE [Controller id=0 epoch=2] Changed state of replica 3 for partition orderer-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-05-02 19:05:08,244] TRACE [Controller id=0 epoch=2] Changed state of replica 0 for partition orderer-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-05-02 19:05:08,247] TRACE [Controller id=0 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0,2,3, isNew=false) to broker 3 for partition orderer-0 (state.change.logger)
[2019-05-02 19:05:08,249] TRACE [Controller id=0 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0,2,3, isNew=false) to broker 0 for partition orderer-0 (state.change.logger)
[2019-05-02 19:05:08,250] TRACE [Controller id=0 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0, 2, 3], offlineReplicas=[2]) to brokers Set(0, 3) for partition orderer-0 (state.change.logger)
[2019-05-02 19:05:08,251] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0,2,3, isNew=false) correlation id 1 from controller 0 epoch 2 for partition orderer-0 (state.change.logger)
[2019-05-02 19:05:08,253] WARN [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 2 for partition orderer-0 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2019-05-02 19:05:08,254] TRACE [Controller id=0 epoch=2] Received response {error_code=0,partitions=[{topic=orderer,partition=0,error_code=11}]} for request LEADER_AND_ISR with correlation id 1 sent to broker shodan:9092 (id: 0 rack: null) (state.change.logger)
[2019-05-02 19:05:08,257] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=1, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0, 2, 3], offlineReplicas=[2]) for partition orderer-0 in response to UpdateMetadata request sent by controller 0 epoch 2 with correlation id 2 (state.change.logger)
[2019-05-02 19:05:08,257] TRACE [Controller id=0 epoch=2] Received response {error_code=0} for request UPDATE_METADATA with correlation id 2 sent to broker shodan:9092 (id: 0 rack: null) (state.change.logger)
[2019-05-02 19:05:08,320] TRACE [Controller id=0 epoch=2] Changed state of replica 3 for partition orderer-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-05-02 19:05:08,321] TRACE [Controller id=0 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0,2,3, isNew=false) to broker 0 for partition orderer-0 (state.change.logger)
[2019-05-02 19:05:08,321] TRACE [Controller id=0 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0, 2, 3], offlineReplicas=[2, 3]) to brokers Set(0) for partition orderer-0 (state.change.logger)
[2019-05-02 19:05:08,322] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0,2,3, isNew=false) correlation id 3 from controller 0 epoch 2 for partition orderer-0 (state.change.logger)
[2019-05-02 19:05:08,322] WARN [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 3 epoch 2 for partition orderer-0 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2019-05-02 19:05:08,322] TRACE [Controller id=0 epoch=2] Received response {error_code=0,partitions=[{topic=orderer,partition=0,error_code=11}]} for request LEADER_AND_ISR with correlation id 3 sent to broker shodan:9092 (id: 0 rack: null) (state.change.logger)
[2019-05-02 19:05:08,323] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0, 2, 3], offlineReplicas=[2, 3]) for partition orderer-0 in response to UpdateMetadata request sent by controller 0 epoch 2 with correlation id 4 (state.change.logger)
[2019-05-02 19:05:08,324] TRACE [Controller id=0 epoch=2] Received response {error_code=0} for request UPDATE_METADATA with correlation id 4 sent to broker shodan:9092 (id: 0 rack: null) (state.change.logger)
[2019-05-02 19:05:08,325] TRACE [Controller id=0 epoch=2] Received response {error_code=0} for request UPDATE_METADATA with correlation id 5 sent to broker shodan:9092 (id: 0 rack: null) (state.change.logger)
[2019-05-02 19:05:12,095] ERROR [Controller id=0 epoch=2] Controller 0 epoch 2 failed to change state for partition orderer-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition orderer-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:390)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.KafkaController$ControlledShutdown.doControlledShutdown(KafkaController.scala:1094)
	at kafka.controller.KafkaController$ControlledShutdown.$anonfun$handleProcess$1(KafkaController.scala:1056)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController$ControlledShutdown.handleProcess(KafkaController.scala:1056)
	at kafka.controller.PreemptableControllerEvent.process(KafkaController.scala:1809)
	at kafka.controller.PreemptableControllerEvent.process$(KafkaController.scala:1807)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1047)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:94)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:94)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-05-02 19:05:17,112] ERROR [Controller id=0 epoch=2] Controller 0 epoch 2 failed to change state for partition orderer-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition orderer-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:390)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.KafkaController$ControlledShutdown.doControlledShutdown(KafkaController.scala:1094)
	at kafka.controller.KafkaController$ControlledShutdown.$anonfun$handleProcess$1(KafkaController.scala:1056)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController$ControlledShutdown.handleProcess(KafkaController.scala:1056)
	at kafka.controller.PreemptableControllerEvent.process(KafkaController.scala:1809)
	at kafka.controller.PreemptableControllerEvent.process$(KafkaController.scala:1807)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1047)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:94)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:94)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
